org: dyadic
app: receipt-saver-be
service: rs-service

custom:
  defaultEnv: ${file(./default_env.json)}
  tableReceiptName: ${self:service}-${self:custom.defaultEnv.TABLE_RECEIPT}-${self:provider.stage}
  tableItemName: ${self:service}-${self:custom.defaultEnv.TABLE_ITEM}-${self:provider.stage}
  tableUsersName: ${self:service}-${self:custom.defaultEnv.TABLE_USERS}-${self:provider.stage}
  bucketReceiptsName: ${self:service}-${self:custom.defaultEnv.BUCKET_RECEIPTS}-${self:provider.stage}
  serverless-offline:
    port: ${self:custom.defaultEnv.SERVERLESS_PORT}
    resourceRoutes: true
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      port: ${self:custom.defaultEnv.DB_PORT}
      inMemory: true
      migrate: true
    migration:
      dir: offline

provider:
  name: aws
  runtime: nodejs10.x
  stage: prod
  region: eu-west-2
  environment: 
    NODE_ENV: ${self:custom.defaultEnv.NODE_ENV}
    CLIENT_URL: ${self:custom.defaultEnv.CLIENT_URL}
    TABLE_RECEIPT: ${self:custom.tableReceiptName}
    TABLE_ITEM: ${self:custom.tableItemName}
    TABLE_USERS: ${self:custom.tableUsersName}
    BUCKET_RECEIPTS: ${self:custom.bucketReceiptsName}
  iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
        Resource:
          - { "Fn::GetAtt": ["ReceiptDynamoDBTable", "Arn" ] }
  apiGateway:
    binaryMediaTypes:
      - '*/*'

functions:
  app:
    handler: build/app.sls.server
    events:
      - http:
          path: /helloWorld
          method: get
      - http:
          path: /image
          method: ANY
      - http:
          path: /image/{any+}
          method: ANY
      - http:
          path: /receipt
          method: ANY
      - http:
          path: /receipt/{any+}
          method: ANY


resources:
  # DynamoDB
  - ${file(resources/dynamodb-table.yml)}
  # S3
  - ${file(resources/s3-bucket.yml)}

plugins:
  - serverless-dynamodb-local
  - serverless-offline
